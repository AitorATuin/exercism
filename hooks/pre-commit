#!/bin/env lua
--vim:set et ft=lua sw=2 ts=2:

local FILES_REGEX = "A%s+([^/]+)/([^/]+)/([^/]+)"

local GIT_ATTRS_FILE = ".gitattributes"

local LANG_EXT = {
  lua = "lua",
  go = "go"
}

local function needed_gitattributes_entries()
  local entries = {}
  local cmd = "git status -s --untracked-files=no"
  local pipe = io.popen(cmd)
  local n = 0
  for line in pipe:lines() do
    local lang, exercise, file = line:match(FILES_REGEX)
    local file_name = nil
    if lang and exercise and file and LANG_EXT[lang] then
      file_name = file:match("([^.]+)%." .. LANG_EXT[lang])
      if file_name and file_name == exercise then
        local str = string.format("%s/%s/%s", lang, exercise, file)
        n = n + 1
        entries[str] = true
      end
    end
  end
  return entries, n
end

local function stage_gitattributes(entries, n)
  if n > 0 then
    local fd = io.open(GIT_ATTRS_FILE, "r")
    for line in fd:lines() do
      -- Remove the entry if it's already in the .gitattributes files
      if entries[line] == true then
        entries[line] = nil
        n = n - 1
      end
    end
    fd:close()
  end
  return entries, n
end

local entries, n = stage_gitattributes(needed_gitattributes_entries())
if n > 0 then
  print("The following files will be commited unencrypted:")
  for entry in pairs(entries) do
    print(string.format("   %s", entry))  
  end
  print("Aborting commit!")
  os.exit(1)
end
